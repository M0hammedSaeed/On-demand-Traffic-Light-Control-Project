/*******************************************************************************
 *
 *  [   Module  ]: ULTRASONIC Module
 *
 *  [ File Name ]: ultrasonic.c
 *
 *  [Description]: Source file for the HC-SR04 Ultrasonic driver.
 *
 *  [   Author  ]: Mohamed Saeed
 *
 *******************************************************************************/

/*******************************************************************************
 *                                  INCLUDES
 *******************************************************************************/

#include "ultrasonic.h"
#include "../../MCAL/ICU/icu.h"
#include "../../MCAL/GPIO/gpio.h"
#include <util/delay.h> /* For the delay functions */

/*******************************************************************************
 *                               Global Variable
 *******************************************************************************/
static uint8 g_edgeCount = 0;
static uint16 g_timeHigh = 0;
static uint8 g_distance = 0;

/*------------------------------------------------------------------------------
 *                        Private Functions Prototypes
 *------------------------------------------------------------------------------*/

/*
 * [FUNCTION NAME]: Ultrasonic_edgeProcessing
 * [DISCRIPTION]  : Call-Back Function used to calculate g_timeHigh for the Ultrasonic pulse
 * [Args]  : void
 * [RUTURN]: void
 */
static void Ultrasonic_edgeProcessing(void);

/*
 * [FUNCTION NAME]: Ultrasonic_Trigger
 * [DISCRIPTION]  : Function send trigger pulse for Ultrasonic sensor to start measurements
 * [Args]  : void
 * [RUTURN]: void
 */
static void Ultrasonic_Trigger(void);

/*******************************************************************************
 *                         Implementation FUNCTIONS
 *******************************************************************************/

/*
 * [FUNCTION NAME]: Ultrasonic_init
 * [DISCRIPTION]  : Initialize the Ultrasonic driver by:
 * 					1. Initialize the Trigger pin direction
 * 					2. Initialize the ICU driver and Its Call back function.
 * [Args]  : void
 * [RUTURN]: uint16
 */
void Ultrasonic_init(void)
{
	/* Create configuration structure for ICU driver */
	Icu_ConfigType Icu_Config = {F_CPU_8, RISING};

	/* Configure the Trigger pin as output */
	GPIO_SetPinDir(ULTRASONIC_TRIGGER_PORT_ID, ULTRASONIC_TRIGGER_PIN_ID, pin_output);

	/* Initialize the ICU Driver */
	Icu_init(&Icu_Config);

	/* Set the Call back function pointer in the ICU driver */
	Icu_setCallBack(Ultrasonic_edgeProcessing);
}

/*
 * [FUNCTION NAME]: Ultrasonic_readDistance
 * [DISCRIPTION]  : Function calculates the distance measured by the Ultrasonic sensor by:
 * 					1. Clear all the variables from the previous read operation.
 *				 	2. Clear the ICU timer register
 * 					3. Send the Trigger to the Ultrasonic by call Ultrasonic_Trigger function
 * 					4. Wait for the measurements to be done by the ICU. We need two edges raising and falling.
 * 					5. Calculate the distance in Centimeter value
 * [Args]  : void
 * [RUTURN]: uint16
 */
uint16 Ultrasonic_readDistance(void)
{
	/* Clear all variables as they may have values from previous read operation */
	g_distance = 0;
	g_edgeCount = 0;
	g_timeHigh = 0;

	/* Clear the timer counter register to start measurements once trigger is sent */
	Icu_clearTimerValue();

	/* Send the trigger to activate the Ultra-sonic sensor (Start measurements) */
	Ultrasonic_Trigger();

	/* Wait until the ICU measures the pulse in the ECHO pin */
	while(g_edgeCount != ULTRASONIC_NUM_OF_DETECTED_EDGES);

	/*
	 * Calculate the distance in Centimeter value :-
	 *
	 * => sound speed in air = 340 m/s = 340*100 cm/s = 34000 cm/s
	 * => total distance = speed * echo time
	 * => distance = total distance /2 = 34000/2 * echo time
	 * 			   = 17000 * echo time
	 *
	 * Note: Total distance is divided by 2 because signal travels from HC-SR04 to object
	 * 		 and returns to the module HC-SR-04.
	 *
	 *  we have selected an internal 8MHz oscillator frequency for ATmega32, with Prescaler F_CPU/8 for timer frequency.
	 * Then time to execute 1 instruction is 1 us.So, the timer gets incremented after 1 us time elapse
	 *
	 * distance = 17000 x (TIMER value) x 1 x 10^-6 cm
	 *			= 0.017 x (TIMER value) cm
	 *			= (TIMER value) / 58.8 cm or (TIMER value) * 0.017 cm
	*/
	g_distance = g_timeHigh / 58;

	return g_distance;
}

/*
 * [FUNCTION NAME]: Ultrasonic_edgeProcessing
 * [DISCRIPTION]  : Call-Back Function used to calculate g_timeHigh for the Ultrasonic pulse
 * [Args]  : void
 * [RUTURN]: void
 */
static void Ultrasonic_edgeProcessing(void)
{
	g_edgeCount++;
	if(g_edgeCount == 1)
	{
		/*
		 * Clear the timer counter register to start measurements from the
		 * first detected rising edge
		 */
		Icu_clearTimerValue();
		/* Detect falling edge */
		Icu_setEdgeDetectionType(FALLING);
	}
	else if(g_edgeCount == 2)
	{
		/* Store the High time value */
		g_timeHigh = Icu_getInputCaptureValue();
		/* Detect rising edge */
		Icu_setEdgeDetectionType(RISING);
	}
}

/*
 * [FUNCTION NAME]: Ultrasonic_Trigger
 * [DISCRIPTION]  : Function send trigger pulse for Ultrasonic sensor to start measurements
 * [Args]  : void
 * [RUTURN]: void
 */
static void Ultrasonic_Trigger(void)
{
	/* Send the Trigger pulse */
	GPIO_WritePin(ULTRASONIC_TRIGGER_PORT_ID, ULTRASONIC_TRIGGER_PIN_ID, LOGIC_HIGH);
	_delay_us(10);
	GPIO_WritePin(ULTRASONIC_TRIGGER_PORT_ID, ULTRASONIC_TRIGGER_PIN_ID, LOGIC_LOW);
}
